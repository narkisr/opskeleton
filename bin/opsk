#!/usr/bin/env ruby

$:.push 'lib'
require 'rubygems'
require 'thor'
require 'thor/runner'
require 'thor/group'
require 'opskeleton'

module Opsk
  class Root < Thor

    register Opsk::Generate, 'generate', "generate [name] [box]", 'generates opskelaton project structure'
    register Opsk::Module, 'module', 'module [name]', 'generate an rspec ready Puppet module'
    register Opsk::Package, 'package', 'package', 'packages current module for celestial'
    register Opsk::Clean, 'clean', 'clean', 'cleans up packaging products'
    register Opsk::Bump, 'bump', 'bump', 'bumps up version (clearing old version also)'
    register Opsk::Deploy, 'deploy', 'deploy [bintray repo]', 'deploy packge into bintray.com'

    desc 'version', 'print opsk version'  
    def version
	puts Opskeleton::VERSION    
    end
  end 
end

# not sure that this is the cleanest way
Opsk::Root.tasks['generate'].options = Opsk::Generate.class_options 

Opsk::Root.start ARGV
